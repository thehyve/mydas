<!--
  ~ Copyright 2007 Philip Jones, EMBL-European Bioinformatics Institute
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~
  ~ For further details of the mydas project, including source code,
  ~ downloads and documentation, please see:
  ~
  ~ http://code.google.com/p/mydas/
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <properties>
        <!-- This is the only place where you should
        modify the version number for mydas, including mydas server_core and
        mydas example_server_installation.  -->
        <project-version>1.0.6</project-version>
    </properties>
    
    <groupId>uk.ac.ebi.mydas</groupId>
    <artifactId>mydas_master</artifactId>
    <version>${project-version}</version>

    <packaging>pom</packaging>
    <name>mydas_example Maven Webapp</name>
    <url>http://code.google.com/p/mydas/</url>

	<licenses>
        <license>
            <name>The Apache Software License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <distributionManagement>
        <repository>
            <id>ebi-repo</id>
            <name>EBI Repository</name>
            <!--the url can pint to any server that can see/write to the maven home directory-->
            <url>scp://lobster.ebi.ac.uk/homes/maven/public_html/m2repo</url>
        </repository>

        <snapshotRepository>
            <uniqueVersion>false</uniqueVersion>
            <id>ebi-repo-snapshots</id>
            <name>EBI Snapshots Repository</name>
            <url>scp://lobster.ebi.ac.uk/homes/maven/public_html/m2repo_snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    
    <description>
        This project aims to offer an easy-to-extend Java DAS server framework.
        It offers several advantages:

        * Implementing data sources is very easy but also flexible and powerful.
        * Data caching is built into the system, with access to the caching
        mechanism made available to the data sources.
        * All aspects of the server are highly configurable, including
        selecting options where the DAS 1.53 specification offers
        choices to the implementor.
        * The latest Java technologies have been used throughout the
        system to optimise performance and simplify data source development.
        * Wherever possible the same terminology is used in the API as in
        the DAS specification and XML - again, making data source
        development more easy.
        * The server allows XSLT transforms of the DAS XML to be configured
        to provide a simple DAS client view (limited to the single DAS
        source).

        More details of the DAS protocol, DAS servers and DAS clients can
        be found at http://www.biodas.org/wiki/Main_Page.

        The first version of this server is a complete implementation of
        Distributed Sequence Annotation System (DAS) Version 1.53.
        If you are interested in learning more about DAS 1.53, the
        specification is highly recommended as a concise and complete
        description of the DAS protocol that can be obtained from:
        http://biodas.org/documents/spec.html
    </description>

    <scm>
        <url>http://mydas.googlecode.com/svn/</url>
        <connection>http://mydas.googlecode.com/svn/</connection>
    </scm>

	<modules>
        <module>server_core</module>
        <module>example_server_installation</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <!-- Maven can be used to build javadocs from the source. (The source has been
            carefully documented, so this should be useful).

            To generate the javadocs, use mvn javadoc:javadoc

            To package the javadocs, use mvn javadoc:jar
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <overview/>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
